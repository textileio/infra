apiVersion: kops.k8s.io/v1alpha2
kind: Cluster
metadata:
  creationTimestamp: null
  name: ${CLUSTER_NAME}
spec:
  docker:
    skipInstall: true
  cloudLabels:
    Team: ${TEAM}
    Project: ${PROJECT}
  api:
    loadBalancer:
      type: Public
  kubeDNS:
    provider: CoreDNS
  additionalPolicies:
    node: |
      [
        {
          "Effect": "Allow",
          "Action": [
              "ecr:*"
          ],
          "Resource": "*"
        }
      ]
  authorization:
    rbac: {}
  channel: stable
  configBase: ${KOPS_STATE_STORE}/${CLUSTER_NAME}
  docker:
    defaultUlimit:
    - "nofile=${ULIMIT_NOFILE}"
  etcdClusters:
  - cpuRequest: 200m
    etcdMembers:
    - instanceGroup: master-${REGION}
      name: a
    memoryRequest: 100Mi
    name: main
  - cpuRequest: 100m
    etcdMembers:
    - instanceGroup: master-${REGION}
      name: a
    memoryRequest: 100Mi
    name: events
  hooks:
    - name: disable-transparent-hugepages.service
      before:
      - docker.service
      - kubelet.service
      manifest: |
        Type=oneshot
        ExecStart=/bin/sh -c "echo never >/sys/kernel/mm/transparent_hugepage/enabled"
  iam:
    allowContainerRegistry: true
    legacy: false
  kubelet:
    anonymousAuth: false
    maxPods: 200
    allowedUnsafeSysctls:
      - net.netfilter.nf_conntrack_max
      - net.core.somaxconn
      - net.core.netdev_max_backlog
      - net.core.rmem_max
      - net.core.wmem_max
      - net.ipv4.ip_local_port_range
      - net.ipv4.tcp_max_syn_backlog
      - net.ipv4.tcp_tw_recycle
      - net.ipv4.tcp_tw_reuse
      - net.ipv4.tcp_mem
      - net.ipv4.tcp_rmem
      - net.ipv4.tcp_wmem
      - net.ipv4.tcp_max_orphans
      - net.ipv4.tcp_abort_on_overflow
    streamingConnectionIdleTimeout: 60m
    registryPullQPS: 3
    registryBurst: 6
  kubeControllerManager:
    eventRecordQPS: 20
    eventBurst: 40
    kubeAPIQPS: 20
    kubeAPIBurst: 40
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: 1.18.10
  masterInternalName: api.internal.${CLUSTER_NAME}
  masterPublicName: api.${CLUSTER_NAME}
  networking:
    flannel:
      backend: vxlan
  nonMasqueradeCIDR: 100.64.0.0/10
  sshAccess:
  - 0.0.0.0/0
  topology:
    dns:
      type: Public
    masters: public
    nodes: public
